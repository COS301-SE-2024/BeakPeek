// <auto-generated />
using System;
using BeakPeekApi.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BeakPeekApi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240623142609_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BeakPeekApi.Models.Bird", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Common_group")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Common_species")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Genus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pentad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProvinceId")
                        .HasColumnType("int");

                    b.Property<double>("ReportingRate")
                        .HasColumnType("float");

                    b.Property<string>("Species")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Spp")
                        .HasColumnType("int");

                    b.Property<int>("Total_Cards")
                        .HasColumnType("int");

                    b.Property<int>("Total_Records")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProvinceId");

                    b.ToTable("Birds");
                });

            modelBuilder.Entity("BeakPeekApi.Models.GautengBirdSpecies", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<double?>("Apr")
                        .HasColumnType("float");

                    b.Property<double?>("Aug")
                        .HasColumnType("float");

                    b.Property<string>("Common_group")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Common_species")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Dec")
                        .HasColumnType("float");

                    b.Property<double?>("Feb")
                        .HasColumnType("float");

                    b.Property<string>("Genus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Jan")
                        .HasColumnType("float");

                    b.Property<double?>("Jul")
                        .HasColumnType("float");

                    b.Property<double?>("Jun")
                        .HasColumnType("float");

                    b.Property<double?>("Mar")
                        .HasColumnType("float");

                    b.Property<double?>("May")
                        .HasColumnType("float");

                    b.Property<double?>("Nov")
                        .HasColumnType("float");

                    b.Property<double?>("Oct")
                        .HasColumnType("float");

                    b.Property<string>("Pentad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("ReportingRate")
                        .HasColumnType("float");

                    b.Property<double?>("Sep")
                        .HasColumnType("float");

                    b.Property<string>("Species")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Spp")
                        .HasColumnType("int");

                    b.Property<int>("Total_Cards")
                        .HasColumnType("int");

                    b.Property<int>("Total_Records")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("GautengBirdSpecies");
                });

            modelBuilder.Entity("BeakPeekApi.Models.Province", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Provinces");
                });

            modelBuilder.Entity("BeakPeekApi.Models.Bird", b =>
                {
                    b.HasOne("BeakPeekApi.Models.Province", "Province")
                        .WithMany("Birds")
                        .HasForeignKey("ProvinceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Province");
                });

            modelBuilder.Entity("BeakPeekApi.Models.Province", b =>
                {
                    b.Navigation("Birds");
                });
#pragma warning restore 612, 618
        }
    }
}
