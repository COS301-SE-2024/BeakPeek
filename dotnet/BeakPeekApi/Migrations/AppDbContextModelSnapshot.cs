// <auto-generated />
using System;
using BeakPeekApi.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BeakPeekApi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.HasSequence("ProvinceSequence");

            modelBuilder.Entity("BeakPeekApi.Models.Bird", b =>
                {
                    b.Property<int>("Ref")
                        .HasColumnType("int");

                    b.Property<string>("Common_group")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Common_species")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Full_Protocol_Number")
                        .HasColumnType("int");

                    b.Property<double>("Full_Protocol_RR")
                        .HasColumnType("float");

                    b.Property<string>("Genus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Latest_FP")
                        .HasColumnType("Date");

                    b.Property<string>("Species")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Ref");

                    b.HasIndex("Ref", "Common_species", "Common_group");

                    b.ToTable("Birds");
                });

            modelBuilder.Entity("BeakPeekApi.Models.Bird_Province", b =>
                {
                    b.Property<int>("BirdId")
                        .HasColumnType("int");

                    b.Property<int>("ProvinceId")
                        .HasColumnType("int");

                    b.HasKey("BirdId", "ProvinceId");

                    b.HasIndex("ProvinceId");

                    b.ToTable("Bird_Provinces");
                });

            modelBuilder.Entity("BeakPeekApi.Models.Pentad", b =>
                {
                    b.Property<string>("Pentad_Allocation")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Pentad_Latitude")
                        .HasColumnType("int");

                    b.Property<int>("Pentad_Longitude")
                        .HasColumnType("int");

                    b.Property<int>("ProvinceId")
                        .HasColumnType("int");

                    b.Property<int>("Total_Cards")
                        .HasColumnType("int");

                    b.HasKey("Pentad_Allocation");

                    b.HasIndex("Pentad_Allocation")
                        .IsUnique();

                    b.HasIndex("ProvinceId");

                    b.ToTable("Pentads");
                });

            modelBuilder.Entity("BeakPeekApi.Models.Province", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("NEXT VALUE FOR [ProvinceSequence]");

                    SqlServerPropertyBuilderExtensions.UseSequence(b.Property<int>("Id"));

                    b.Property<double?>("Apr")
                        .HasColumnType("float");

                    b.Property<double?>("Aug")
                        .HasColumnType("float");

                    b.Property<int?>("BirdRef")
                        .HasColumnType("int");

                    b.Property<double?>("Dec")
                        .HasColumnType("float");

                    b.Property<double?>("Feb")
                        .HasColumnType("float");

                    b.Property<double?>("Jan")
                        .HasColumnType("float");

                    b.Property<double?>("Jul")
                        .HasColumnType("float");

                    b.Property<double?>("Jun")
                        .HasColumnType("float");

                    b.Property<double?>("Mar")
                        .HasColumnType("float");

                    b.Property<double?>("May")
                        .HasColumnType("float");

                    b.Property<double?>("Nov")
                        .HasColumnType("float");

                    b.Property<double?>("Oct")
                        .HasColumnType("float");

                    b.Property<string>("Pentad_Allocation")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("ReportingRate")
                        .HasColumnType("float");

                    b.Property<double?>("Sep")
                        .HasColumnType("float");

                    b.Property<int>("Total_Records")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BirdRef");

                    b.HasIndex("Pentad_Allocation");

                    b.ToTable("Provinces");

                    b.UseTpcMappingStrategy();
                });

            modelBuilder.Entity("BeakPeekApi.Models.ProvinceList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("ProvincesList");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "easterncape"
                        },
                        new
                        {
                            Id = 2,
                            Name = "freestate"
                        },
                        new
                        {
                            Id = 3,
                            Name = "gauteng"
                        },
                        new
                        {
                            Id = 4,
                            Name = "kwazulunatal"
                        },
                        new
                        {
                            Id = 5,
                            Name = "limpopo"
                        },
                        new
                        {
                            Id = 6,
                            Name = "mpumalanga"
                        },
                        new
                        {
                            Id = 7,
                            Name = "northerncape"
                        },
                        new
                        {
                            Id = 8,
                            Name = "northwest"
                        },
                        new
                        {
                            Id = 9,
                            Name = "westerncape"
                        });
                });

            modelBuilder.Entity("BeakPeekApi.Models.Easterncape", b =>
                {
                    b.HasBaseType("BeakPeekApi.Models.Province");

                    b.ToTable("Easterncape");
                });

            modelBuilder.Entity("BeakPeekApi.Models.Freestate", b =>
                {
                    b.HasBaseType("BeakPeekApi.Models.Province");

                    b.ToTable("Freestate");
                });

            modelBuilder.Entity("BeakPeekApi.Models.Gauteng", b =>
                {
                    b.HasBaseType("BeakPeekApi.Models.Province");

                    b.ToTable("Gauteng");
                });

            modelBuilder.Entity("BeakPeekApi.Models.Kwazulunatal", b =>
                {
                    b.HasBaseType("BeakPeekApi.Models.Province");

                    b.ToTable("Kwazulunatal");
                });

            modelBuilder.Entity("BeakPeekApi.Models.Limpopo", b =>
                {
                    b.HasBaseType("BeakPeekApi.Models.Province");

                    b.ToTable("Limpopo");
                });

            modelBuilder.Entity("BeakPeekApi.Models.Mpumalanga", b =>
                {
                    b.HasBaseType("BeakPeekApi.Models.Province");

                    b.ToTable("Mpumalanga");
                });

            modelBuilder.Entity("BeakPeekApi.Models.Northerncape", b =>
                {
                    b.HasBaseType("BeakPeekApi.Models.Province");

                    b.ToTable("Northerncape");
                });

            modelBuilder.Entity("BeakPeekApi.Models.Northwest", b =>
                {
                    b.HasBaseType("BeakPeekApi.Models.Province");

                    b.ToTable("Northwest");
                });

            modelBuilder.Entity("BeakPeekApi.Models.Westerncape", b =>
                {
                    b.HasBaseType("BeakPeekApi.Models.Province");

                    b.ToTable("Westerncape");
                });

            modelBuilder.Entity("BeakPeekApi.Models.Bird_Province", b =>
                {
                    b.HasOne("BeakPeekApi.Models.Bird", null)
                        .WithMany()
                        .HasForeignKey("BirdId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BeakPeekApi.Models.ProvinceList", null)
                        .WithMany()
                        .HasForeignKey("ProvinceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BeakPeekApi.Models.Pentad", b =>
                {
                    b.HasOne("BeakPeekApi.Models.ProvinceList", "Province")
                        .WithMany()
                        .HasForeignKey("ProvinceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Province");
                });

            modelBuilder.Entity("BeakPeekApi.Models.Province", b =>
                {
                    b.HasOne("BeakPeekApi.Models.Bird", "Bird")
                        .WithMany()
                        .HasForeignKey("BirdRef");

                    b.HasOne("BeakPeekApi.Models.Pentad", "Pentad")
                        .WithMany()
                        .HasForeignKey("Pentad_Allocation");

                    b.Navigation("Bird");

                    b.Navigation("Pentad");
                });
#pragma warning restore 612, 618
        }
    }
}
