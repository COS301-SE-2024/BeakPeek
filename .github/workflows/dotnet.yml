name: ðŸ¥… Test Dotnet and Upload Code Coverage

on:
  push:
    branches:
      - 'main'
      - 'development'
      - 'dev/test/**'
      - '**devops**'
    paths:
      - dotnet/BirdApi/**
      - .github/workflows/dotnet.yml

  pull_request:
    branches:
     - main
     - development
    paths:
      - dotnet/BirdApi/**
  workflow_dispatch:
  workflow_call:
    secrets:
      CODECOV_TOKEN:
        required: true
    inputs:
      upload-coverage:
        type: boolean
        default: false

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  get-coverage:
    if: ${{ inputs.upload-coverage }}
    name: ðŸ“„ Generate Coverage If not there
    runs-on: ubuntu-latest
    outputs:
      generate-coverage: ${{ steps.result.outputs.exists }}

    steps:
    - uses: actions/checkout@v4
    - name: check if artifact already exists
      uses: softwareforgood/check-artifact-v4-existence@v0.3.0
      id: check-exists
      with:
        name: dotnet-code-coverage-${{hashFiles('dotnet/BirdApi/BeakPeekApi/packages.lock.json', 'dotnet/BirdApi/BeakPeekApi.Tests/packages.lock.json')}}

    - name: set output
      id: result
      run: |
          echo "generate-coverage=${{steps.check-exists.outputs.exists}}" >> $GITHUB_OUTPUT

  dotnet-tests-coverage:
    needs: [ get-coverage ]
    if: ${{ always() && ( !inputs.upload-coverage || !needs.get-coverage.outputs.generate-coverage ) }}
    name: ðŸ§ª Run tests and upload coverage
    runs-on: ubuntu-latest
    
    env:
      NUGET_PACKAGES: ${{ github.workspace }}/.nuget/packages

    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x
          cache: true
          cache-dependency-path: dotnet/BirdApi/BeakPeekApi.Tests/packages.lock.json

      - name: Remove files that do not need to be tested
        working-directory: dotnet/BirdApi
        run: |
          rm -rf ./BeakPeekApi/Migrations

      - name: Restore dependencies
        working-directory: dotnet/BirdApi
        run: dotnet restore --locked-mode

      - name: Build project
        working-directory: dotnet/BirdApi
        run: dotnet build --no-restore

      - name: Generate coverage report
        working-directory: dotnet/BirdApi
        run: dotnet test --no-restore --verbosity normal /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura

      - name: Cache Dotnet Code Coverage
        uses: actions/upload-artifact@v4
        with:
          name: dotnet-code-coverage-${{hashFiles('dotnet/BirdApi/BeakPeekApi/packages.lock.json', 'dotnet/BirdApi/BeakPeekApi.Tests/packages.lock.json')}}
          path: ./dotnet/BirdApi/BeakPeekApi.Tests/coverage.cobertura.xml

      - name: check if artifact already exists
        uses: softwareforgood/check-artifact-v4-existence@v0.3.0
        id: has-coverage
        with:
          name: flutter-code-coverage-${{hashFiles('beakpeek/pubspec.lock')}}

      - name: Get Flutter Code Coverage
        if: ${{ steps.has-coverage.outputs.exists == false }}
        uses: actions/download-artifact@v4
        id: get-coverage
        with:
          name: flutter-code-coverage-${{hashFiles('beakpeek/pubspec.lock')}}

      - name: Upload Coverage
        if: ${{ !env.ACT && !inputs.upload-coverage }}
        uses: codecov/codecov-action@v4
        with:
          files: ./dotnet/BirdApi/BeakPeekApi.Tests/coverage.cobertura.xml, ./lcov.info
          name: Dotnet Coverage
          token: ${{ secrets.CODECOV_TOKEN }}
          verbose: true
